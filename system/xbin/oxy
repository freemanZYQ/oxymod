# OxyMod.
# Version: 1.4
# Written by Metaspook
# License: <http://opensource.org/licenses/MIT>
# Copyright (c) 2018 Metaspook.

#   __                 __   __  
#  /  \ \_/ \ /  |\/| /  \ |  \ 
#  \__/ / \  |   |  | \__/ |__/ 
#                               

#~~~~ VARIABLES STAGE 01 ~~~~
export PATH=${PATH}:/system/xbin
vn=v1.4
MODDIR=/sbin/.core/img/oxymod
BOOTSCRIPT=$MODDIR/service.sh
PROPSCRIPT=$MODDIR/system.prop
OXY="${0##*/}"
ON="\e[1;32mON\e[0m"
OFF="\e[1;31mOFF\e[0m"
ADAPTIVE="\e[1;33mAdaptive\e[0m"
SOFT="\e[1;33mSoft\e[0m"
DCIP3="\e[1;33mDCI-P3\e[0m"
CUSTOM="\e[1;33mCustom\e[0m"
DEFAULT="\e[1;33mDefault\e[0m"
SRGB="\e[1;33msRGB\e[0m"
var1opcallrec="## Enabling OnePlus Call recorder service."
var2opcallrec="$OXY opcallrec"
var1hbm="## Enabling High Brightness Mode."
var2hbm="$OXY hbm"
var1scolor="## Screen Color Calibration."
var2scolor="$OXY scolor"
var1voenabler="## Enabling VoLTE and VoWiFi support."
var2voenabler="$OXY voenabler"
#~~~~ ALIASES STAGE 01 ~~~~
alias SetGetGlobalOCR='settings get global op_voice_recording_supported_by_mcc'
alias SetPutGlobalOCR='settings put global op_voice_recording_supported_by_mcc'
alias SetGetSystemSCM='settings get system screen_color_mode_settings_value'
alias SetPutSystemSCM='settings put system screen_color_mode_settings_value'
alias GetHBM='head -1 /sys/devices/virtual/graphics/fb0/hbm | tail -c 2'
alias wifibondval="find /system -name 'WCNSS_qcom_cfg.ini'"

#
#----< FUNCTIONS >----#
#
fnexit(){
case $1 in
	-noroot) echo -e "[FAIL!] ${0##*/} should run by root user.\n"; exit ;;
	-nooxyplus) echo -e "[FAIL!] ${0##*/} should run on a OnePlus device running OxygenOS.\n"; exit ;;
	-nooos) echo -e "[FAIL!] ${0##*/} should run from OxygenOS.\n"; exit ;;
esac
}
chkroot(){
	# Checking Root Access.
	id=$(id); id=${id#*=}; id=${id%%[\( ]*}
	[ "$id" = "0" ] || [ "$id" = "root" ] && ROOT=true
	[ ! "$ROOT" ] && fnexit -noroot
}
chkoxyplus(){
# Checking if OnePlus device running OxygenOS.
[ "`getprop | grep -iE 'oneplus|oxygen'`" ] || fnexit -nooxyplus
}
fnbanner(){
echo -e "
                            
         /  \ \_/ \_/       
         \  / / \  |        
             M O D          
                            
Version: $vn
"
}
fnrebootreq(){
unset REREQ
clear; fnbanner
echo -n "
 + Changes needs device Reboot!
 |
 +- 1. Yes
 +- 2. No
 
Enter Option: "
read -rsn1 coin00
case $coin00 in
1) REREQ=yes;;
2) fnoxyusage0;;
*) fnrebootreq;;
esac
}
fnhbm(){
## High Brightness Mode.
VAR=2
case $1 in
"$ON")
sed -i "/$var1hbm/d" $BOOTSCRIPT
sed -i "/$var2hbm/d" $BOOTSCRIPT
VAR=0;;
"$OFF")
sed -i "/$var1hbm/d" $BOOTSCRIPT
sed -i "/$var2hbm/d" $BOOTSCRIPT
echo "$var1hbm\n$var2hbm" >> $BOOTSCRIPT;;
esac
echo $VAR > /sys/devices/virtual/graphics/fb0/hbm
}
ocrkill(){
if [ -f $MODDIR/ocrpid ]; then
kill -9 $(cat $MODDIR/ocrpid) &>/dev/null
rm -f $MODDIR/ocrpid
SetPutGlobalOCR 0
fi
}
ocrloop(){
[ -z $ocrvar ] && ocrvar=0
case $(SetGetGlobalOCR) in
0) [ $ocrvar -gt 0 ] && ((ocrvar-=5));;
1) [ $ocrvar -lt 25 ] && ((ocrvar+=5));;
esac
SetPutGlobalOCR 1
sleep $ocrvar
export ocrvar
ocrloop
}
fnopcallrec(){
## Enabling OnePlus Call recorder.
case $1 in
"$ON")
sed -i "/$var1opcallrec/d" $BOOTSCRIPT
sed -i "/$var2opcallrec/d" $BOOTSCRIPT
ocrkill;;
"$OFF")
sed -i "/$var1opcallrec/d" $BOOTSCRIPT
sed -i "/$var2opcallrec/d" $BOOTSCRIPT
echo "$var1opcallrec\n$var2opcallrec" >> $BOOTSCRIPT
ocrkill
ocrloop &
echo $! > $MODDIR/ocrpid
sleep 0.1;;
*)
sleep 25
ocrkill
ocrloop &
echo $! > $MODDIR/ocrpid;;
esac
}
fnscolorval(){
#Get Screen Color Value.
SCOLORVAL="`SetGetSystemSCM`"
case $SCOLORVAL in
2) SCOLORVAL="$SRGB";;
3) SCOLORVAL="$CUSTOM";;
4) SCOLORVAL="$DCIP3";;
5) SCOLORVAL="$ADAPTIVE";;
6) SCOLORVAL="$SOFT";;
*) SCOLORVAL="$DEFAULT";;
esac
}
fnscolor(){
## Screen Color Calibration.
[ "$SCOLORVAL" ] && VAR=$1
case $VAR in
2|3|4|5|6)
sed -i "/$var1scolor/d" $BOOTSCRIPT
sed -i "/$var2scolor/d" $BOOTSCRIPT
echo "$var1scolor\n$var2scolor $VAR" >> $BOOTSCRIPT;;
0|1)
sed -i "/$var1scolor/d" $BOOTSCRIPT
sed -i "/$var2scolor/d" $BOOTSCRIPT;;
*) sleep 15;;
esac
SetPutSystemSCM $VAR
}
fnnotes(){
clear; fnbanner
echo "
 VoLTE and VoWiFi
 ----------------
 Adds VoLTE/VoWiFi feature to device but
 only works with a carrier that support it.
 
 WiFi Channel Bonding
 --------------------
 Theoretically doubles your wireless throughput 
 while router supports channel bonding.
 Useful if a router only support 2.4GHz frequency.
 Unuseful in area of high density WiFi access points.

"
read -rsn1 "null?   <Press ANY KEY to Main Menu>"
fnoxyusage0
}
fnoxyusage1(){
#Get Screen Color Value.
fnscolorval
clear; fnbanner
echo -n "
 + Screen Color Mode  | $SCOLORVAL
 |
 +- 1. Default
 +- 2. sRGB
 +- 3. Custom
 +- 4. DCI-P3
 +- 5. Adaptive
 +- 6. Soft
 \_ 0. Main Manu
 
Enter Option: "
read -rsn1 coin00
case $coin00 in
1) fnscolor 1; fnoxyusage1;;
2) fnscolor 2; fnoxyusage1;;
3) fnscolor 3; fnoxyusage1;;
4) fnscolor 4; fnoxyusage1;;
5) fnscolor 5; fnoxyusage1;;
6) fnscolor 6; fnoxyusage1;;
0) fnoxyusage0;;
*) fnoxyusage1;;
esac
}
fnvoenablerval(){
cat <<EOF
## Enabling VoLTE and VoWiFi support.
#Debug Options.
persist.dbg.ims_volte_enable
persist.dbg.volte_avail_ovr
persist.dbg.vt_avail_ovr
persist.dbg.wfc_avail_ovr
#Radio Options.
persist.radio.data_con_rprt
persist.radio.calls.on.ims
EOF
}
fnvoenablerchk(){
VOENABLERVAR=$OFF
var=0
for X in $(fnvoenablerval | grep -v '#'); do
	[ "`getprop $X`" -eq 1 ] && ((var++))
done
[ $(fnvoenablerval | grep -v '#' | wc -l) -eq $var ] && VOENABLERVAR=$ON
}
fnvoenabler(){
## Enabling VoLTE and VoWiFi support.
VAR=1
case $1 in
"$ON")
VAR=0
sed -i "/$var1voenabler/d;/$var2voenabler/d" $BOOTSCRIPT;;
"$OFF")
sed -i "/$var1voenabler/d;/$var2voenabler/d" $BOOTSCRIPT
#sed -i "/$var2voenabler/d" $BOOTSCRIPT
echo "$var1voenabler\n$var2voenabler" >> $BOOTSCRIPT;;
esac
for X in $(fnvoenablerval | grep -v '#'); do
	resetprop $X $VAR
done
}
fnwifibondchk(){
WIFIBONDVAR=$OFF
var=0
for X in $(wifibondval); do
[ -f "$MODDIR$X" ] && ((var++))
done
[ $(wifibondval | wc -l) -eq $var ] && WIFIBONDVAR=$ON
}
fnwifibond(){
## WiFi Channel Bonding
case $1 in
"$ON") 
fnrebootreq
if [ "$REREQ" ]; then
for X in $(wifibondval); do
rm -f "$MODDIR$X"
done
reboot
fi;;
"$OFF")
fnrebootreq
if [ "$REREQ" ]; then
for X in $(wifibondval); do
mkdir -p "$MODDIR${X%/*}"
cp -fp "$X" "$MODDIR$X"
sed -i 's/gChannelBondingMode24GHz=0/gChannelBondingMode24GHz=1/g' "$MODDIR$X"
done
reboot
fi;;
esac
}
fnoxyusage0(){
CALLRECVAL=$OFF; HBMVAL=$OFF
#Get Call recorder value.
[ $(SetGetGlobalOCR) -eq 1 ] && CALLRECVAL=$ON
#Get High Brightness Mode value.
[ $(GetHBM) -eq 2 ] && HBMVAL=$ON
#Get Screen Color Value.
fnscolorval
#Get VoEnabler Value.
fnvoenablerchk
##Get WiFi Channel Bonding value.
fnwifibondchk
clear; fnbanner
echo -n "
 1. OnePlus Call Recorder  | $CALLRECVAL
 2. High Brightness Mode   | $HBMVAL     
 3. Screen Color Mode      | $SCOLORVAL
 4. VoLTE and VoWiFi       | $VOENABLERVAR
 5. WiFi Channel Bonding   | $WIFIBONDVAR
 6. Read Notes
 7. Refresh
 0. Exit
 
Enter Option: "
read -rsn1 coin00
case $coin00 in
1) fnopcallrec $CALLRECVAL; fnoxyusage0;;
2) fnhbm $HBMVAL; fnoxyusage0;;
3) fnoxyusage1;;
4) fnvoenabler $VOENABLERVAR; fnoxyusage0;;
5) fnwifibond $WIFIBONDVAR;;
6) fnnotes;;
0) clear; exit 0;;
*) fnoxyusage0;;
esac
}

#
#----< CALL CENTER >----#
#
chkroot
chkoxyplus
case $OXY in
oxy|oxy.sh)
	allarg="$*"
	case $1 in
	opcallrec) fnopcallrec;;
	dcip3) fndcip3;;
	hbm) fnhbm;;
	voenabler) fnvoenabler;;
	scolor) fnscolor ${allarg#$1 };;
	*) fnoxyusage0;;
	esac
	;;
opcallrec) fnopcallrec;;
dcip3) fndcip3;;
hbm) fnhbm;;
voenabler) fnvoenabler;;
scolor) fnscolor ${*};;
esac
exit 0
